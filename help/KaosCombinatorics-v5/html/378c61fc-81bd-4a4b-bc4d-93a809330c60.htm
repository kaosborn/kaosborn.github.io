<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Version History</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="378c61fc-81bd-4a4b-bc4d-93a809330c60" /><meta name="Description" content="This release makes several changes to the Permutation class to add support for plain changes. There are also several breaking changes to improve API readability." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Kaos.Combinatorics Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\0908d812-b502-4da7-a452-66e043c6bb70.htm" title="Kaos.Combinatorics Library" tocid="roottoc">Kaos.Combinatorics Library</a></div><div class="toclevel1" data-toclevel="1"><a data-tochassubtree="false" href="../html/0908d812-b502-4da7-a452-66e043c6bb70.htm" title="Welcome to KaosCombinatorics" tocid="0908d812-b502-4da7-a452-66e043c6bb70">Welcome to KaosCombinatorics</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="../html/378c61fc-81bd-4a4b-bc4d-93a809330c60.htm" title="Release History" tocid="378c61fc-81bd-4a4b-bc4d-93a809330c60">Release History</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/f2905f4b-0a14-e9ba-c92b-9d6998425f51.htm" title="Kaos.Combinatorics" tocid="f2905f4b-0a14-e9ba-c92b-9d6998425f51">Kaos.Combinatorics</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>Version History</h1></td></tr></table><span class="introStyle"></span> <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />KwCombinatorics version 1.2 (2009-03-03)</span></div><div id="ID0RBSection" class="collapsibleSection"><ul><li>Implements generic IEquatable interface.</li><li>Implements proper null tests for comparison operators.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />KwCombinatorics version 1.3 (2012-01-05)</span></div><div id="ID1RBSection" class="collapsibleSection"><ul><li>Updates build environment to Visual Studio 2010.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />KwCombinatorics version 1.4 (2012-03-23)</span></div><div id="ID2RBSection" class="collapsibleSection"><ul><li>Adds increment, decrement operators for all classes.</li><li>Fixes bugs on empty sequences.</li><li>Renames many parameters.</li><li>Adds minor optimizations.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />KwCombinatorics version 2.2 (2012-04-01)</span></div><div id="ID3RBSection" class="collapsibleSection"><ul><li>Adds Multicombination.GetRowsForPicks (startPicks, stopPicks).</li><li>Adds CopyTo (array) to all combinatorics.</li><li>Removes Multicombination.GetRows (picks, startRank).</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />KwCombinatorics version 2.3 (2012-04-17)</span></div><div id="ID4RBSection" class="collapsibleSection"><ul><li>Adds Permutation.Backtrack method.</li><li>Multicombination ranking constructor accepts unsorted data.</li><li>Combination ranking constructor accepts unsorted data.</li><li>Fixes numeric overflow bug in Combination.Rank setter.</li><li>Fixes missing numeric overflow checks in Product constructors.</li><li>Fixes missing bounds checks in Product ranking constructor.</li><li>Removes increment and decrement operators.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />KwCombinatorics version 2.4 (2012-07-01)</span></div><div id="ID5RBSection" class="collapsibleSection"><ul><li>Optimizes Combination.Rank setter.</li><li>&gt;Optimizes Multicombination.Rank setter.</li><li>Adds methods Combinatoric.BinomialCoefficient, Combinatoric.Factorial.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />KwCombinatorics version 4.0 (2012-11-14)</span></div><div id="ID6RBSection" class="collapsibleSection"><p>
          This release makes several changes to the Permutation class to add support for plain changes.
          There are also several breaking changes to improve API readability.
        </p><ul><li>Adds Permutation.Choices property to support k-permutations.</li><li>Adds Permutation constructors to support k-permutations.</li><li>Adds property Permutation.PlainChange.</li><li>Adds property Permutation.Swaps.</li><li>Adds method Permutation.GetRowsForAllPicks.</li><li>Adds method Permutation.GetRowsOfPlainChanges.</li><li>Renames all Height properties to RowCount.</li><li>Renames Permutation.Width to Picks.</li><li>Renames Permutation.MaxWidth to MaxChoices.</li><li>Renames Permutation.GetRowsForAllWidths to GetRowsForAllChoices.</li><li>Removes Permutation (int, long) constructor.</li><li>Removes ICloneable base class and Clone methods from all combinatorics.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />KaosCombinatorics version 5.0 (2017-04-14)</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
          This release updates tooling to 2017.
          The new .NET Standard has been embraced for compatibility and future-proofing.
          Development now requires Visual Studio 2017 with the repository changed to Git.
          Binary now hosted at NuGet.org.
        </p><ul><li>Renames namespace from Kw to Kaos.</li><li>Changes binary to .NET Standard 1.0 multitargeted to .NET 3.5, .NET 4.0.</li><li>Updates build environment to Visual Studio 2017.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />KaosCombinatorics version Next (2018-??-??)</span></div><div id="ID9RBSection" class="collapsibleSection"><p><strong><em>Summary</em></strong></p><ul><li>Optimize <span class="code">Permutation</span> class for speed and allocations</li><li>Updates behavior of iterators to produce consistent operand side effects</li><li>Changes thrown exceptions</li></ul><p><strong><em>Details</em></strong></p><p><strong>Optimize <span class="code">Permutation</span> class for speed and allocations</strong></p><p>
          The <span class="code">Permutation</span> class has seen the elimination of some temporary memory allocations in constructors taking <span class="code">int[]</span>, the <span class="code">Rank</span> setter, and backtracking.
          This change also comes with slight performance improvements.
        </p><p><strong>Updates behavior of iterators to produce consistent operand side effects</strong></p><p>
          Previous versions of iterators produced inconsistent side affects to their operands.
          New behavior is to synchronize the operand to the values yielded and restore their operand to its original state after the iteration is complete.
        </p><p>All iterators are affected:</p><ul><li><span class="code">Combination.GetRows</span>, <span class="code">Combination.GetRowsForAllPicks</span></li><li><span class="code">Multicombination.GetRows</span>, <span class="code">Multicombination.GetRowsForPicks</span></li><li><span class="code">Permutation.GetRows</span>, <span class="code">Permutation.GetRowsForAllChoices</span>, <span class="code">Permutation.GetRowsForAllPicks</span>, <span class="code">Permutation.GetRowsOfPlainChanges</span></li><li><span class="code">Product.GetRows</span></li></ul><p>There is no impact for the typical scenario where the operand is not directly accessible as in this snippet:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID8EAHABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID8EAHABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID8EAHABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID8EAHABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> cn <span class="highlight-keyword">in</span> <span class="highlight-keyword">new</span> Combination (choices:<span class="highlight-number">3</span>, picks:<span class="highlight-number">2</span>).GetRowsForAllPicks())
    Console.WriteLine (cn);

<span class="highlight-comment">/* Output:

{ 0 }
{ 1 }
{ 2 }
{ 0, 1 }
{ 0, 2 }
{ 1, 2 }*/</span>

</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID8EAHABAAA");</script><p>This change only impacts the atypical scenario where the operand is accessible independent of the yielded result such as in this snippet:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID8EAFABAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID8EAFABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID8EAFABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID8EAFABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> cn0 = <span class="highlight-keyword">new</span> Combination (choices:<span class="highlight-number">3</span>, picks:<span class="highlight-number">2</span>);
<span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> cn <span class="highlight-keyword">in</span> cn0.GetRowsForAllPicks())
    Console.WriteLine ($<span class="highlight-literal">"cn={cn} cn0={cn0}"</span>);
Console.WriteLine ($<span class="highlight-literal">"After complete, cn0={cn0}"</span>);

<span class="highlight-comment">/* Output:

cn={ 0 } cn0={ 0 }
cn={ 1 } cn0={ 1 }
cn={ 2 } cn0={ 2 }
cn={ 0, 1 } cn0={ 0, 1 }
cn={ 0, 2 } cn0={ 0, 2 }
cn={ 1, 2 } cn0={ 1, 2 }
After complete, cn0={ 0, 1 }*/</span>

</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID8EAFABAAA");</script><p><strong>Changes thrown exceptions</strong></p><p>
          Minor changes have been made to exception throwing in:
        </p><ul><li>Methods <span class="code">Permutation.Permute</span>, <span class="code">Product.Permute</span></li><li>Constructors <span class="code">Permutation (int[])</span>, <span class="code">Permutation (int[], int)</span></li></ul><p>
          Where <span class="code">Permute</span> methods threw <span class="code">IndexOutOfRangeException</span> they now throw <span class="code">ArgumentException</span> with a fail fast approach.
        </p><p>
          Where <span class="code">Permutation</span> constructors taking an element array threw <span class="code">IndexOutOfRangeException</span> they now throw <span class="code">ArgumentException</span>.
        </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID10RB')" onkeypress="SectionExpandCollapse_CheckKey('ID10RB', event)" tabindex="0"><img id="ID10RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID10RBSection" class="collapsibleSection"><h4 class="subHeading">Other Resources</h4><div class="seeAlsoStyle"><a href="0908d812-b502-4da7-a452-66e043c6bb70.htm">Welcome to KaosCombinatorics</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p>[v5.0.0.6] Copyright © 2009-2018 Kasey O. (github.com/kaosborn)</p></div></body></html>